name: Deploy to DigitalOcean Droplet

on:
    push:
        branches:
            - main

jobs:
    precommit:
        uses: ./.github/workflows/precommit.yml

    migrate:
        needs: precommit
        uses: ./.github/workflows/migrate.yml
        secrets: inherit


    deploy:
        name: Deploy to DigitalOcean Droplet
        runs-on: ubuntu-latest
        needs: [migrate, precommit]
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'

        steps:
          - name: Checkout code
            uses: actions/checkout@v4

          - name: Setup SSH
            uses: webfactory/ssh-agent@v0.7.0
            with:
              ssh-private-key: ${{ secrets.DO_SSH_PRIVATE_KEY }}

          - name: Add server to known hosts
            run: |
              ssh-keyscan -H ${{ secrets.DO_SERVER_IP }} >> ~/.ssh/known_hosts

          - name: Deploy to server
            run: |
              ssh ${{ secrets.DO_SSH_USER }}@${{ secrets.DO_SERVER_IP }} << 'EOF'
              set -e

              # Navigate to application directory
              cd ${{ secrets.DO_APP_PATH }}

              # Pull latest changes
              git pull origin main

              # Activate virtual environment
              source venv/bin/activate

              # Install/update dependencies
              pip install -r requirements.txt

              # Create production environment file from GitHub secrets
              echo "⚙️ Setting up production environment variables..."
              echo "# Production Environment Variables (Generated from GitHub Secrets)" > .env
              echo "DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}" >> .env
              echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
              echo "DB_USER=${{ secrets.DB_USER }}" >> .env
              echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
              echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
              echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
              echo "DJANGO_ALLOWED_HOSTS=${{ secrets.DJANGO_ALLOWED_HOSTS }}" >> .env
              echo "STATIC_ROOT=${{ secrets.STATIC_ROOT  }}" >> .env
              echo "MEDIA_ROOT=${{ secrets.MEDIA_ROOT }}" >> .env
              echo "CORS_ALLOWED_ORIGINS=${{ secrets.CORS_ALLOWED_ORIGINS }}" >> .env

              # Set proper permissions for .env file
              chmod 600 .env
              chown www-data:www-data .env

              # Run Django management commands
              python manage.py collectstatic --noinput --settings=speakwise.settings.prod
              python manage.py migrate --settings=speakwise.settings.prod

              # Restart application services
              sudo systemctl restart gunicorn
              sudo systemctl restart nginx

              # Check service status
              sudo systemctl status gunicorn --no-pager
              sudo systemctl status nginx --no-pager
              EOF

          - name: Notify deployment status
            if: always()
            run: |
              if [ "${{ job.status }}" == "success" ]; then
                echo "✅ Deployment successful!"
              else
                echo "❌ Deployment failed!"
              fi
